# Netlify Configuration for Caf√© com Vendas
# This file configures the build and deployment settings for the site

[build]
  # Build command - generates tokens, builds CSS/JS, and runs Eleventy
  command = "npm run build"
  
  # Output directory for the built site
  publish = "_site"
  
  # Functions directory
  functions = "netlify/functions"
  
  # Environment configuration
  [build.environment]
    NODE_VERSION = "22.17.1"
    NODE_OPTIONS = "--max-old-space-size=6144"  # 6GB for production builds
    SECRETS_SCAN_OMIT_KEYS = "VITE_FORMSPREE_FORM_ID,VITE_STRIPE_PUBLIC_KEY,VITE_GTM_CONTAINER_ID"

# Build processing - Vite handles all optimization, keep only essential settings
[build.processing]
  skip_processing = false

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Development settings - 2025 best practice: use Netlify dev for full-stack development
[dev]
  command = "eleventy --serve --watch --config=.eleventy.mjs"
  targetPort = 8080
  publish = "_site"
  functions = "netlify/functions"

# Function-specific settings
[functions]
  node_bundler = "esbuild"

# URL redirects and rewrites
[[redirects]]
  # Redirect to thank-you page after successful payment
  from = "/payment-success"
  to = "/obrigado"
  status = 302

[[redirects]]
  # Redirect old URLs if needed
  from = "/thank-you"
  to = "/obrigado"
  status = 301


# Headers for security and performance
[[headers]]
  for = "/*"
  [headers.values]
    # Content Security Policy - aligned with Stripe & GTM
    # Remove 'unsafe-eval' to tighten security. Keep minimal required origins.
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://js.stripe.com https://checkout.stripe.com https://connect-js.stripe.com https://m.stripe.network https://www.youtube.com https://s.ytimg.com https://maps.googleapis.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' data: https://fonts.googleapis.com https://www.googletagmanager.com https://js.stripe.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://res.cloudinary.com https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://fonts.gstatic.com https://i.ytimg.com https://img.youtube.com https://www.google-analytics.com https://*.google-analytics.com https://analytics.google.com https://*.analytics.google.com https://*.g.doubleclick.net https://www.google.com https://www.google.pt https://www.google.com.br https://www.facebook.com https://connect.facebook.net; connect-src 'self' https://api.stripe.com https://m.stripe.network https://checkout.stripe.com https://formspree.io https://connect.mailerlite.com https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://www.youtube.com https://maps.googleapis.com https://www.google-analytics.com https://*.google-analytics.com https://analytics.google.com https://*.analytics.google.com https://www.facebook.com https://connect.facebook.net https://graph.facebook.com; frame-src https://js.stripe.com https://hooks.stripe.com https://checkout.stripe.com https://connect-js.stripe.com https://www.youtube.com https://www.youtube-nocookie.com https://gtm.jucanamaximiliano.com.br https://www.facebook.com; object-src 'none'; base-uri 'self'; form-action 'self' https://formspree.io"
    # Report-only policy to help diagnose CSP violations without relaxing production policy
    Content-Security-Policy-Report-Only = "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://js.stripe.com https://checkout.stripe.com https://connect-js.stripe.com https://m.stripe.network https://www.youtube.com https://s.ytimg.com https://maps.googleapis.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' data: https://fonts.googleapis.com https://www.googletagmanager.com https://js.stripe.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://res.cloudinary.com https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://fonts.gstatic.com https://i.ytimg.com https://img.youtube.com https://www.google-analytics.com https://*.google-analytics.com https://analytics.google.com https://*.analytics.google.com https://*.g.doubleclick.net https://www.google.com https://www.google.pt https://www.google.com.br https://www.facebook.com https://connect.facebook.net; connect-src 'self' https://api.stripe.com https://m.stripe.network https://checkout.stripe.com https://formspree.io https://connect.mailerlite.com https://www.googletagmanager.com https://gtm.jucanamaximiliano.com.br https://www.youtube.com https://maps.googleapis.com https://www.google-analytics.com https://*.google-analytics.com https://analytics.google.com https://*.analytics.google.com https://www.facebook.com https://connect.facebook.net https://graph.facebook.com; frame-src https://js.stripe.com https://hooks.stripe.com https://checkout.stripe.com https://connect-js.stripe.com https://www.youtube.com https://www.youtube-nocookie.com https://gtm.jucanamaximiliano.com.br https://www.facebook.com; object-src 'none'; base-uri 'self'; form-action 'self' https://formspree.io; report-uri /.netlify/functions/csp-report"
    
    # Modern security headers (2025 standards)
    X-Frame-Options = "DENY"
    Referrer-Policy = "strict-origin-when-cross-origin"
    # Allow Stripe iframes to use the Payment Request API (Apple Pay / GPay)
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=(self \"https://js.stripe.com\" \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://m.stripe.network\"), browsing-topics=()"
    Cross-Origin-Embedder-Policy = "unsafe-none"
    Cross-Origin-Opener-Policy = "same-origin-allow-popups"
    Cross-Origin-Resource-Policy = "cross-origin"
    
    # HSTS with preload for enhanced security
    Strict-Transport-Security = "max-age=63072000; includeSubDomains; preload"
    
    # Performance headers
    X-DNS-Prefetch-Control = "on"

# Homepage optimization - instant CDN serving with background revalidation
[[headers]]
  for = "/"
  [headers.values]
    Cache-Control = "public, max-age=0, s-maxage=31536000, stale-while-revalidate=86400"
    Link = "</fonts/Lora/Lora-600.woff2>; rel=prefetch; as=font; type=font/woff2; crossorigin, </fonts/Lora/Lora-700.woff2>; rel=prefetch; as=font; type=font/woff2; crossorigin, </fonts/CenturyGothic/CenturyGothic-Regular.woff2>; rel=prefetch; as=font; type=font/woff2; crossorigin, </fonts/CenturyGothic/CenturyGothic-Bold.woff2>; rel=prefetch; as=font; type=font/woff2; crossorigin"

# Directory indexes optimization (like /obrigado/)
[[headers]]
  for = "/*/"
  [headers.values]
    Cache-Control = "public, max-age=0, s-maxage=31536000, stale-while-revalidate=86400"

# Other HTML files - shorter CDN cache but still use stale-while-revalidate
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, s-maxage=3600, stale-while-revalidate=86400"

# Optimized asset caching - 2025 best practices
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, must-revalidate"
    X-Content-Type-Options = "nosniff"

# Font files with long-term caching
[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff2"
    Access-Control-Allow-Origin = "*"

# CSS files cache with compression
[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# JavaScript files cache with compression  
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# Image files cache with optimization headers
[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/*.jpeg"  
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# SVG files cache  
[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# JSON files cache
[[headers]]
  for = "/*.json"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# Headers for API endpoints
[[headers]]
  for = "/.netlify/functions/*"
  [headers.values]
    # Functions set CORS dynamically; do not set allow-origin here
    Access-Control-Allow-Headers = "Content-Type, Authorization, Stripe-Signature"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"

# Environment-specific settings
[context.production]
  command = "npm ci --include=dev && npm run build"
  
  [context.production.environment]
    NODE_ENV = "production"
    ELEVENTY_ENV = "production"
    # Ensure devDependencies are installed for build tools (Vite/Eleventy)
    NPM_CONFIG_PRODUCTION = "false"

[context.deploy-preview]
  command = "npm run build"
  
  [context.deploy-preview.environment]
    NODE_ENV = "development"
    ELEVENTY_ENV = "development"
    NODE_OPTIONS = "--max-old-space-size=2048"  # 2GB for faster previews

[context.branch-deploy]
  command = "npm run build"
  
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    ELEVENTY_ENV = "development"
    NODE_OPTIONS = "--max-old-space-size=2048"  # 2GB for branch deploys

# Plugin configuration
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    output_path = "reports/lighthouse.html"
    
    [plugins.inputs.audits]
      performance = 90
      accessibility = 95
      best-practices = 90
      seo = 95

# Form processing (for Formspree backup)
[forms]
  spam_action = "block"
  honeypot_field = "_gotcha"
