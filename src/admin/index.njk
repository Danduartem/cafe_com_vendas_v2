---
title: "Admin Dashboard - System Monitoring"
description: "Real-time system health monitoring and operational dashboard for Caf√© com Vendas infrastructure"
layout: "layout.njk"
permalink: "/admin/"
eleventyExcludeFromCollections: true
---

{# Admin Dashboard - Phase 3 Operational Excellence #}
{# Real-time monitoring interface for all enterprise systems #}

<div id="admin-dashboard-container" class="admin-dashboard-wrapper">
  {# Dashboard will be rendered by JavaScript #}
  <div class="loading-splash">
    <div class="loading-content">
      <div class="loading-spinner"></div>
      <h1>System Dashboard</h1>
      <p>Loading operational monitoring interface...</p>
    </div>
  </div>
</div>

{# Admin API Key Input (for security) #}
<div id="admin-auth-modal" class="auth-modal" role="dialog" aria-labelledby="auth-title" aria-modal="true">
  <div class="auth-modal-content">
    <div class="auth-header">
      <h2 id="auth-title">Admin Authentication</h2>
      <p>Enter your admin API key to access the system dashboard</p>
    </div>
    
    <form id="admin-auth-form" class="auth-form">
      <div class="form-group">
        <label for="admin-api-key" class="form-label">Admin API Key</label>
        <input 
          type="password" 
          id="admin-api-key" 
          name="adminKey" 
          class="form-input" 
          placeholder="Enter your admin API key"
          required
          autocomplete="current-password"
        >
        <small class="form-hint">Contact your system administrator if you don't have an API key</small>
      </div>
      
      <div class="form-actions">
        <button type="submit" class="btn btn-primary">
          <span class="btn-icon">üîë</span>
          Access Dashboard
        </button>
      </div>
      
      <div id="auth-error" class="auth-error hidden" role="alert">
        <span class="error-icon">‚ö†Ô∏è</span>
        <span class="error-message">Invalid API key. Please try again.</span>
      </div>
    </form>
  </div>
</div>

{# Dashboard Styles #}
<style>
  /* Loading splash screen */
  .admin-dashboard-wrapper {
    min-height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  }
  
  .loading-splash {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    color: white;
    text-align: center;
  }
  
  .loading-content h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 1rem 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .loading-content p {
    font-size: 1.125rem;
    opacity: 0.9;
    margin: 0;
  }
  
  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 1s ease-in-out infinite;
    margin: 0 auto 1rem;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  /* Auth modal */
  .auth-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  
  .auth-modal.hidden {
    display: none;
  }
  
  .auth-modal-content {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    width: 100%;
    max-width: 400px;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  }
  
  .auth-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .auth-header h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0 0 0.5rem 0;
  }
  
  .auth-header p {
    color: #64748b;
    margin: 0;
  }
  
  .form-group {
    margin-bottom: 1.5rem;
  }
  
  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.5rem;
  }
  
  .form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
    box-sizing: border-box;
  }
  
  .form-input:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
  }
  
  .form-hint {
    display: block;
    font-size: 0.75rem;
    color: #6b7280;
    margin-top: 0.25rem;
  }
  
  .form-actions {
    display: flex;
    justify-content: center;
  }
  
  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: #2563eb;
    color: white;
    border: none;
    border-radius: 0.375rem;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s;
  }
  
  .btn:hover {
    background: #1d4ed8;
  }
  
  .btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.5);
  }
  
  .btn-icon {
    font-size: 1.125rem;
  }
  
  .auth-error {
    margin-top: 1rem;
    padding: 0.75rem;
    background: #fef2f2;
    border: 1px solid #fecaca;
    border-radius: 0.375rem;
    color: #dc2626;
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .auth-error.hidden {
    display: none;
  }
  
  /* Dashboard loaded state */
  .dashboard-loaded .loading-splash {
    display: none;
  }
  
  .dashboard-loaded .auth-modal {
    display: none;
  }
</style>

{# Dashboard JavaScript #}
<script src="/js/admin.js"></script>
<script>
  
  // Admin authentication state
  let adminApiKey = '';
  let dashboard = null;
  
  // DOM elements
  const authModal = document.getElementById('admin-auth-modal');
  const authForm = document.getElementById('admin-auth-form');
  const authError = document.getElementById('auth-error');
  const dashboardContainer = document.getElementById('admin-dashboard-container');
  
  // Check for stored API key
  const storedApiKey = sessionStorage.getItem('admin_api_key');
  if (storedApiKey) {
    adminApiKey = storedApiKey;
    initializeDashboard();
  } else {
    showAuthModal();
  }
  
  // Auth form submission
  authForm.addEventListener('submit', async (event) => {
    event.preventDefault();
    
    const formData = new FormData(authForm);
    const apiKey = formData.get('adminKey');
    
    if (!apiKey) {
      showAuthError('Please enter your API key');
      return;
    }
    
    // Test API key by making a health check request
    try {
      const response = await fetch(`/.netlify/functions/health-check?admin_key=${encodeURIComponent(apiKey)}`);
      
      if (response.ok) {
        // Valid API key
        adminApiKey = apiKey;
        sessionStorage.setItem('admin_api_key', apiKey);
        hideAuthModal();
        initializeDashboard();
      } else if (response.status === 401) {
        showAuthError('Invalid API key. Please check and try again.');
      } else {
        showAuthError('Unable to verify API key. Please try again later.');
      }
    } catch (error) {
      console.error('Auth error:', error);
      showAuthError('Connection error. Please check your internet connection.');
    }
  });
  
  // Keyboard shortcuts for auth modal
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && !authModal.classList.contains('hidden')) {
      // Allow escape in development mode
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        adminApiKey = 'dev-key';
        hideAuthModal();
        initializeDashboard();
      }
    }
  });
  
  function showAuthModal() {
    authModal.classList.remove('hidden');
    document.getElementById('admin-api-key').focus();
  }
  
  function hideAuthModal() {
    authModal.classList.add('hidden');
    hideAuthError();
  }
  
  function showAuthError(message) {
    const errorElement = document.querySelector('.error-message');
    errorElement.textContent = message;
    authError.classList.remove('hidden');
  }
  
  function hideAuthError() {
    authError.classList.add('hidden');
  }
  
  async function initializeDashboard() {
    try {
      // Show dashboard container
      dashboardContainer.classList.add('dashboard-loaded');
      
      // Initialize dashboard with configuration
      dashboard = initializeAdminDashboard({
        apiEndpoint: '/.netlify/functions/health-check',
        adminKey: adminApiKey,
        refreshInterval: 30000, // 30 seconds
        maxEvents: 100,
        enableRealTime: true
      });
      
      console.log('Admin dashboard initialized successfully');
      
    } catch (error) {
      console.error('Dashboard initialization failed:', error);
      
      // Show error and allow retry
      const loadingSplash = document.querySelector('.loading-splash');
      loadingSplash.innerHTML = `
        <div class="loading-content">
          <div class="error-icon">‚ö†Ô∏è</div>
          <h1>Dashboard Error</h1>
          <p>Failed to initialize the dashboard. Please refresh the page to try again.</p>
          <button onclick="location.reload()" class="btn btn-primary" style="margin-top: 1rem;">
            Refresh Page
          </button>
        </div>
      `;
    }
  }
  
  // Cleanup on page unload
  window.addEventListener('beforeunload', () => {
    if (dashboard) {
      dashboard.destroy();
    }
  });
  
  // Development helpers
  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    console.log('üîß Admin Dashboard - Development Mode');
    console.log('üí° Press ESC in the auth modal to bypass authentication');
    console.log('üîë Or use any API key - validation is relaxed in development');
    
    // Add development info to page
    const devInfo = document.createElement('div');
    devInfo.style.cssText = `
      position: fixed;
      bottom: 10px;
      left: 10px;
      background: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 0.5rem;
      border-radius: 4px;
      font-size: 0.75rem;
      z-index: 1001;
    `;
    devInfo.innerHTML = 'üîß DEV MODE - Press ESC to bypass auth';
    document.body.appendChild(devInfo);
  }
</script>